name: Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: [self-hosted, macos, x64]
    env:
      ImageOS: macos15
      MIX_ENV: prod
      PHX_HOST: errjordan.dev
      PORT: 4444
      SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      RELEASE_NAME: errjordan

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Define install paths and ensure dirs
        shell: bash
        run: |
          set -euo pipefail
          echo "APP_HOME=$HOME/apps/errjordan" >> "$GITHUB_ENV"
          echo "INSTALL_DIR=$HOME/apps/errjordan/releases/${GITHUB_SHA}/errjordan" >> "$GITHUB_ENV"
          echo "CURRENT_LINK=$HOME/apps/errjordan/current" >> "$GITHUB_ENV"
          echo "BIN=$HOME/apps/errjordan/current/bin/errjordan" >> "$GITHUB_ENV"
          mkdir -p "$HOME/apps/errjordan/releases" "$HOME/apps/errjordan/log"

      - name: Set up Erlang/Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: "1.15"
          otp-version: "26"

      - name: Cache deps and build
        uses: actions/cache@v3
        with:
          path: |
            deps
            _build
          key: mix-${{ runner.os }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            mix-${{ runner.os }}-

      - name: Prepare Mix
        run: |
          mix local.hex --force
          mix local.rebar --force

      - name: Install dependencies
        run: mix deps.get

      - name: Compile app
        run: mix compile

      - name: Build assets
        run: mix assets.deploy

      - name: Create release
        run: mix release --overwrite

      - name: Install release to stable path
        shell: bash
        run: |
          set -euo pipefail
          rsync -a --delete "_build/prod/rel/$RELEASE_NAME/" "$INSTALL_DIR/"
          ln -sfn "$INSTALL_DIR" "$CURRENT_LINK"

      - name: Stop old release
        run: $BIN stop || true

      - name: Run migrations
        run: '$BIN eval "Ecto.Migrator.with_repo(Errjordan.Repo, &Ecto.Migrator.run(&1, :up, all: true))"'

      - name: Start new release
        shell: bash
        run: |
          set -euo pipefail
          PHX_SERVER=true \
          SECRET_KEY_BASE='${{ secrets.SECRET_KEY_BASE }}' \
          DATABASE_URL='${{ secrets.DATABASE_URL }}' \
          PHX_HOST="$PHX_HOST" \
          PORT="$PORT" \
          $BIN daemon

          # Wait up to 30s for the node to report a PID
          for i in {1..30}; do
            if $BIN pid >/dev/null 2>&1; then
              echo "Release is up (pid ok)"
              break
            fi
            sleep 1
          done

          # Optional: HTTP health probe (won't fail the step)
          curl --max-time 5 -sS -o /dev/null "http://127.0.0.1:${PORT}/" || true
